package todoapp.web;

import java.util.List;

import javax.validation.Valid;
import javax.validation.constraints.Min;
import javax.validation.constraints.Size;

import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import todoapp.core.todos.application.TodoEditor;
import todoapp.core.todos.application.TodoFinder;
import todoapp.core.todos.domain.Todo;

@RestController
public class TodoRestController {

	private TodoFinder finder;
	private TodoEditor editor;
	
	public TodoRestController(TodoFinder finder, TodoEditor editor) {
		this.finder = finder;
		this.editor = editor;
	}
	
	@GetMapping("/api/todos")
	public List<Todo> list() {
		return finder.getAll();
	}
	
	@PutMapping("/api/todos/{id}")
	public void update(@PathVariable Long id, @RequestBody TodoWriteCommand command) {
		editor.update(id, command.getTitle(), command.isCompleted());
	}
	
	
	@PostMapping("/api/todos")
	@ResponseStatus(code = HttpStatus.CREATED)
	public void create(@RequestBody @Valid TodoWriteCommand command) {
//		log.info("command: {}", command);
		
		editor.create(command.getTitle());
	}
	
	@DeleteMapping("/api/todos/{id}")
	public void delete(@PathVariable Long id) {
		editor.delete(id);
	}
	
	static class TodoWriteCommand {
		
		@Min(4)
		private String title;
		
		private boolean completed;
		
		@Min(4)
		public String getTitle() {
			return title;
		}
		
		public void setTitle(@Min(4) String title) {
			this.title = title;
		}
		
		public boolean isCompleted() {
			return completed;
		}
	}
}
